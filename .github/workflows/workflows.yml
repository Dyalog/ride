name: Build and ZIP for Windows

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # - name: Get current date
      #   id: date
      #   run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - run: npm install
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y wine64
      - run: node mk w
      - run: |
          echo 'PACKAGE_JSON<<EOF' >> $GITHUB_ENV
          cat ./package.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - run: npm install strftime
      - uses: actions/github-script@v6
        id: date
        with:
          result-encoding: string
          script: |
            const strftime = require('strftime');
            const {stdout} = await exec.getExecOutput('git show -s HEAD --pretty=format:%ci'); // "2023-05-02 12:01:02 +0200"
            const date = new Date(stdout);
            const fmt = strftime('',date);
            return '%Y%m$d-%H%M%S';
      - name: Prepare zip
        run: |
          cd _/${{ fromJson(env.PACKAGE_JSON).name }}/${{ fromJson(env.PACKAGE_JSON).productName }}-win32-ia32
          zip -r -9 ../../../ride.zip *
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.date.outputs.result }}
          release_name: Release ${{ steps.date.outputs.result }} (${{ github.ref }})
          draft: false
          prerelease: false
      - name: Upload Unicode
        id: upload-unicode
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./ride.zip
          asset_name: ride-${{ steps.date.outputs.result }}.zip
          asset_content_type: application/zip
