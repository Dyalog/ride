name: Build and ZIP for Windows

on: [push]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # - name: Get current date
      #   id: date
      #   run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
      - run: npm install
      - run: sudo apt-get update -y
      - run: sudo apt-get install -y wine64
      - run: node mk w
      - run: |
          echo 'PACKAGE_JSON<<EOF' >> $GITHUB_ENV
          cat ./package.json >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - run: npm install strftime
      - uses: actions/github-script@v6
        id: date
        with:
          result-encoding: string
          script: |
            const strftime = require('strftime');
            const {stdout} = await exec.getExecOutput('git show -s HEAD --pretty=format:%ci'); // "2023-05-02 12:01:02 +0200"
            const date = new Date(stdout);
            const fmt = strftime('%Y%m$d-%H%M%S',date);
            return fmt;
      - name: Prepare zip
        run: |
          cd _/${{ fromJson(env.PACKAGE_JSON).name }}/${{ fromJson(env.PACKAGE_JSON).productName }}-win32-ia32
          zip -r -9 ../../../ride.zip *
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.date.outputs.result }}
          name: Release ${{ steps.date.outputs.result }} (${{ github.ref }})
          generate_release_notes: true
          draft: false
          prerelease: false
      - name: Upload assets
        uses: KotwOSS/pipe-to-release@2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: v${{ steps.date.outputs.result }}
          filemap: |
            ./ride.zip>ride-${{ steps.date.outputs.result }}.zip
          asset_content_type: application/zip
